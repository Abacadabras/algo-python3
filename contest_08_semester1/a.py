"""A-Сортирующее действие - слияние отсортированных списков
При сортировке слиянием одна из важных частей программы - функция, выполняющая слияние двух отсортированных массивов в
больший отсортированный массив.

В данной задаче Вам необходимо написать функцию merge(L, R), где L, R -- два отсортированных по возрастанию списка.
Причём, в контексте сортировки слияния, список элементов L расположен левее списка R.

В результате работы функция должна вернуть новый список, который содержит все элементы L, R. Все элементы нового списка
должны быть отсортированы по возрастанию.

Внимание! В данной задаче необходимо реализовать только функцию! Ввод и вывод данных писать не нужно!

Так же обратите внимание, что название функции и число параметров должно строго соответствовать формату merge(L, R)

Ограничения на функцию
Запрещено использование append, sort, sorted.

Аргументы функции
Функция должна принимать на вход 2 аргумента: список L и список R. Элементы списков - целые числа. Элементы списков уже
отсортированы, этот факт проверять не нужно. Списки L и R могут быть пустыми.

Возвращаемое функцией значение
Функция должна вернуть новый список."""


def merge(L: list, R: list) -> list:

    i = j = k = 0
    result = [0] * (len(L) + len(R))
    while i < len(L) and j < len(R):
        if L[i] < R[j]:
            result[k] = L[i]
            i += 1
        else:
            result[k] = R[j]
            j += 1
        k += 1

    while i < len(L):
        result[k] = L[i]
        i += 1
        k += 1
    while j < len(R):
        result[k] = R[j]
        j += 1
        k += 1

    return result


# if __name__ == '__main__':
#     print(merge([1, 3, 4, 5], [2, 3, 7]))
#     print(merge([1, 3, 100], [7]))
