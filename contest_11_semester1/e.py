"""E-Наибольшая общая подпоследовательность
Подпоследовательностью {x n k } называется числовая последовательность, которая составлена из членов последовательности
{x n}, и в которой порядок следования её элементов совпадает с их порядком следования в исходной последовательности
{x n}.
Вам необходимо написать функцию lcs(s1, s2), которая вычисляет наибольшую общую подпоследовательность (НОП) s1 и s2,
где s1 и s2 - непустые числовые последовательности.
"""


def lcs(x, y):
    common = [[0 for _ in range(len(y) + 1)] for _ in range(len(x) + 1)]

    for i in range(1, len(x) + 1):
        for j in range(1, len(y) + 1):
            if x[i - 1] == y[j - 1]:
                common[i][j] = common[i - 1][j - 1] + 1
            else:
                common[i][j] = max(common[i][j - 1],
                                   common[i - 1][j])
    new_seq = []
    i = len(x)
    j = len(y)

    while i > 0 and j > 0:
        if x[i - 1] == y[j - 1]:
            new_seq.append(x[i - 1])
            i -= 1
            j -= 1
        elif common[i - 1][j] == common[i][j]:
            i -= 1
        else:
            j -= 1

    return new_seq[::-1]
