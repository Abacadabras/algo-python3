"""В этой задаче необходимо выполнить слияние двух массивов.

Элементами массивов являются строки, описывающие молекулы.

Молекулы состоят из следующих атомов: углерод (C), водород (H), азот (N) и кислород (O).
Их атомарные массы: С - 12, H - 1, N - 14, O - 16.

Например, молекула метана CH4 состоит из одного атома углерода и 4 атомов водорода. Её молекулярная масса 12+1 * 4 = 16.

Вам необходимо написать функцию merge_by_molweight(L, R), которая выполняет устойчивое слияние двух массивов молекул,
опираясь на их массу, и возвращает это слияние.

Примечание Отправляемое вами решение может включать дополнительные функции, помимо реализации merge_by_molweight(L, R).

В этой задаче запрещается использование встроенных сортировок.

Аргументы функции Функция merge_by_molweight(L, R)

L - первый (левый) массив молекул, молекулы в нём неубывают по массе R - второй (правый) массив молекул, молекулы в нём
неубывают по массе Возвращаемое значение Одно значение - полученный слиянием массив молекул, где молекулы неубывают
по массе."""


def mas(e1):
    e1m = 0
    i = 0
    while i < len(e1):
        k = 1

        if i != len(e1) - 1 and e1[i + 1].isdigit():
            k = int(e1[i + 1])

        if e1[i] == 'C':
            e1m += 12 * k
        elif e1[i] == 'N':
            e1m += 14 * k
        elif e1[i] == 'O':
            e1m += 16 * k
        else:
            e1m += k
        i += 1

        if k != 1:
            i += 1

    return e1m


def merge_by_molweight(L, R):
    C = [0] * (len(L) + len(R))
    i = j = k = 0

    while i < len(L) and j < (len(R)):
        if mas(L[i]) <= mas(R[j]):
            C[k] = L[i]
            i += 1
        else:
            C[k] = R[j]
            j += 1
        k += 1

    while i < len(L):
        C[k] = L[i]
        i += 1
        k += 1

    while j < len(R):
        C[k] = R[j]
        j += 1
        k += 1

    return C
